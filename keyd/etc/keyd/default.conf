# -----------------------------------------------------------------------------
# keyd configuration for [Your Keyboard Name/Type or Purpose - e.g., Primary Laptop]
#
# Features:
# - Home Row Mods (HRM) using lettermod for tap/hold behavior.
# - CapsLock as a primary layer key (acting as Control) for navigation,
#   editing, and shortcuts.
# - CapsLock+e combination provides access to standard Control keybindings.
# - RightAlt as a secondary layer key (also acting as Control) for symbols
#   and utilities.
# - Shift layer includes media key bindings.
# -----------------------------------------------------------------------------

[ids]
* 
# Global utilities
[global]
overload_tap_timeout = 200
# Apply to all detected keyboards unless explicitly excluded elsewhere.
# If you have multiple keyboards, consider using specific IDs:
# e.g., 1234:abcd

# -----------------------------------------------------------------------------
# [main] - Base Layer
#
# Defines default behavior, Home Row Mods, and entry points to other layers.
# -----------------------------------------------------------------------------
[main]

# Layer Access Keys
# -----------------
capslock = overload(capslock, esc)     # Hold for the main 'capslock' layer (navigation, etc.)
                               # Note: Tap behavior is handled within the layer (e.g., Caps+r = esc)
                               # Consider `overload(capslock, esc)` if you prefer Tap=Esc, Hold=Layer.

rightalt = layer(rightalt)     # Hold for the 'rightalt' layer (symbols, utilities)

# Home Row Mods (Tap for letter, Hold for modifier)
# Idle Timeout: 150ms (Tap if pressed within 150ms of another key)
# Hold Timeout: 200ms (Hold if held longer than 200ms after idle timeout expires)
# -----------------------------------------------------------------------
# Left Hand:
a = lettermod(meta, a, 170, 200)     # A = Meta/Super/Win
s = lettermod(alt, s, 170, 200)      # S = Alt
d = lettermod(control, d, 170, 200)  # D = Control
f = lettermod(shift, f, 170, 200)    # F = Shift

# Right Hand:
j = lettermod(shift, j, 170, 200)    # J = Shift
k = lettermod(control, k, 170, 200)  # K = Control
l = lettermod(alt, l, 170, 200)      # L = Alt
; = lettermod(meta, ;, 170, 200)     # ; = Meta/Super/Win


# -----------------------------------------------------------------------------
# [capslock:C] - Primary Modifier Layer (Acts as Control)
#
# Activated by holding CapsLock. Provides navigation, editing, common shortcuts,
# and application-specific bindings. The ':C' means unmapped keys pass through
# as Ctrl + <key>.
# -----------------------------------------------------------------------------
[capslock:C]

# Layer Access Trick (Enter 'control' sub-layer)
# ----------------------------------------------
e = layer(control)


# Navigation
# ----------
j = left
i = up
k = down
l = right

u = home
o = end

y = pageup
h = pagedown

# Editing
# -------
space = enter
r = esc
n = backspace
m = delete

# Standard Shortcuts (Ctrl is implicit via ':C' but explicit mapping overrides)
# ----------------------------------------------------------------------------
d = C-c
f = C-v
s = C-x
, = C-z
. = C-y

# Tab / Window Navigation
# -----------------------
q = C-tab
tab = C-S-tab
x = A-f4

# Virtual Desktop Navigation (Meta+Alt required)
# ----------------------------------------------
2 = M-A-left
3 = M-A-right

# Application Specific
# --------------------
# Browser:
v = A-home
8 = C-r
' = C-S-space

# Terminal:
[ = C-u

# VS Code / IDE:
g = C-A-n
0 = C-S-i

# -----------------------------------------------------------------------------
# [shift] - Standard Shift Layer Modifications
#
# Defines overrides when Shift is held. By default, Shift maps to itself.
# -----------------------------------------------------------------------------
[shift]

# Media Control (Requires Shift to be held)
# -------------
space = playpause
leftalt = nextsong
leftcontrol = previoussong
rightcontrol = previoussong

# -----------------------------------------------------------------------------
# [capslock+control] - Composite Layer for Standard Ctrl Keys
#
# Activated ONLY when BOTH 'capslock' and the temporary 'control' layer
# (triggered by holding 'e' within the capslock layer) are active.
# This allows specific overrides for CapsLock + e + <key> combinations.
# Useful for accessing standard Ctrl shortcuts without mapping them all in [capslock:C].
# NOTE: Must be defined *after* [capslock:C] and the implicit [control] layer.
# -----------------------------------------------------------------------------
[capslock+control]

# Control overrides (Caps + e + key = Ctrl + key)
f = C-f
k = C-k
g = C-g
h = C-h
. = C-.
2 = C-2
3 = C-3
r = C-r

# -----------------------------------------------------------------------------
# [rightalt:C] - Secondary Modifier Layer (Acts as Control)
#
# Activated by holding RightAlt. Provides symbols and utility functions.
# The ':C' means unmapped keys pass through as Ctrl + <key>.
# -----------------------------------------------------------------------------
[rightalt:C]

9 = \
0 = |
a = capslock


# -----------------------------------------------------------------------------
# End of Configuration
# -----------------------------------------------------------------------------
